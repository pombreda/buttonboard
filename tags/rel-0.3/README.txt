---------
Intro
---------
ButtonBoard is designed for remotely running scripts and commands on a media server Mac. It was developed and tested on a Mac (OS X 10.6), but there is no reason it shouldn't run on Linux or possibly a Windows machine (with some work!)

It presents an iPhone Springboard-like grid of graphic buttons, and each button press will launch a different custom script or program as defined by the user. It was primarily designed to be used on an iPhone, but it works great on Safari or Google Chrome, and has also been tested on IE9 and Firefox 3.6+.

ButtonBoard supports a cookie-based authentication with a password, so once you log in, your cookie is good for a month.

Possible uses are controlling A/V equipment using IR, running batch scripts, restarting crashed server processes, media center control, etc. I actually got started on this project when I got a USB-based IR transceiver, wanted to be able to control my stereo and TV from my phone.


While in the future, I may end up adding a configuration GUI, for now the end-user is expected to be able to edit the commands file ("cmds.xml"), write/edit the the underlying shell scripts (or apple script, or batch files), and find/make cool icon files :-)

---------
Setup
---------

---Prerequisites

Before you begin you need to install some python packages. Fortunately this is super-easy on Macs now:

sudo easy_install tornado
sudo easy_install elementtree
On OS X 10.6 you can optionally also do this:

sudo easy_install pil
PIL is the Python Imaging Library, which will allow ButtonBoard to auto-resize your icons for faster serving. This is an optional requirement.

By default, installing this on 10.6 should provide support for PNG images. If you already have a libjpeg installed (i.e. via Mac Ports), PIL should be able to handle JPG images too.

(For OS X 10.5 you may optionally download and install PIL manually. Here is a blog entry detailing how: http://passingcuriosity.com/2009/installing-pil-on-mac-os-x-leopard/ )

----Download and Run
Once this is done, download the dmg file from the Google Code site (http://code.google.com/p/buttonboard), and extract the app. The app bundle was generated by the very handy "Platypus" app. Run the app, and a window should open up. You should now be able to navigate to http://{hostname}:8888, and the default password is "changeme"

Many of the default commands probably won't do anything on your system, but the iTunes buttons should work.

---------
Configuring
---------
The first time it is run, the app created a folder: ~/Library/Application Support/ButtonBoard.


~/Library/
        |
        Application Support/
                |
                ----ButtonBoard/
                          |
                          |--default/
                          |    |----cmds.xml
                          |    |----images/
                          |    |----scripts/
                          |
                          |--user/
                          |    |----settings.xml
                          |    |----cmds.xml
                          |    |----images/
                          |    |----scripts/
All reference to folder names below are relative to this ButtonBoard folder.

---------
Settings
---------
You first want to edit user/settings.xml to change the password, and probably the port.

---------
Commands
---------
To add commands, first have a look at default/cmds.xml . This should give a good idea of the structure of the XML, and the file is well-documented. To add new commands, edit the XML in user/cmds.xml. This file has two parts, the details of each command, and then a layout, defining which command button goes in which row.

Here is sample command definition for playing a random album on iTunes, using some applescript I found on the net:

        <cmd name="random_album_itunes">
                <label>Random Album</label>
                <exec>itunes_random_album.as</exec>
                <icon>itunes.png</icon>
                <badge>shuffle-red.png</badge>
        </cmd>
All customizations should be done in the user folder, to prevent overwrites in later versions.

---------
Scripts
---------
Any kind of script you can launch from the command-line is fair game. The XML supports passing in parameters if you want. You can put your scripts into user/scripts or just reference by absolute path anywhere on your filesystem. You can also call binaries directly, but this can be limiting since the commands are not then run in the context of shell.

---------
Icons
---------
Plunk your icons into user/images. ButtonBoard supports all type of icon images that be displayed on you web browser, and can be any size, but best to start with a square PNG images with transparencies. If you have PIL installed, when the app runs, it will automatically resize your images down to 128x128. The browser will take care of of the "button-ification" of the image, rounding the corners, and overlaying the mask, so no image editing needed.

